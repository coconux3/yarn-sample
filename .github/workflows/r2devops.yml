# R2Devops.io pipeline template - this template aims to generate a complete pipeline
#
# Inputs:
#   - List of technologies detected in the project : batchfile, editorconfig, git attributes, groovy, ignore list, javascript, jest snapshot, json, json with comments, markdown, microsoft visual studio solution, npm config, owasp_dependency_check, powershell, python, roff, roff manpage, shell, text, trivy_dependency, xml, yaml, yarn,

name: R2Devops
on:
  push:
    branches: [ master,r2devops-autopipeline]
  pull_request:
    branches: [ master ]

jobs:
# A style guide linter widely used
  python-flake8:
    name: flake8
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
      - run: python -m pip install flake8
      - name: flake8
        uses: liskin/gh-problem-matcher-wrap@v1
        with:
          linters: flake8
          run: flake8

# A python formatter to help you write homogeneous code
  python-black:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: black
        uses: psf/black@stable
  yarn-workflow:
    runs-on: ubuntu-latest # For now jobs aren't triggered, so I do It manually
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'yarn'
    - run: yarn install --frozen-lockfile --check-cache --immutable --immutable-cache --check-cache
    - run: if [ $(cat package.json | jq .scripts.test) != null ]; then yarn run test; fi
    - run: if [ $(cat package.json | jq .scripts.tests) != null ]; then yarn run tests; fi
    - run: if [ $(cat package.json | jq .scripts.teste2e) != null ]; then yarn run teste2e; fi
    - run: if [ $(cat package.json | jq .scripts.lint) != null ]; then yarn run lint; fi
    - run: if [ $(cat package.json | jq .scripts.build) != null ]; then yarn run build; fi
    - run: if [ $(cat package.json | jq .scripts.coverage) != null ]; then yarn run coverage; fi

